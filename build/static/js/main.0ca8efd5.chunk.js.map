{"version":3,"sources":["reportWebVitals.js","config.ts","components/htmlRenderComponent.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enviroments","id","title","url","key","HTMLRender","this","renderJson","props","data","json","JSON","parse","Array","isArray","map","item","index","tittel","dangerouslySetInnerHTML","__html","tekst","name","rasjonale","style","fontWeight","intro","eier","forstPublisert","dokumentType","console","log","gruppeId","koder","tekniskeData","infoId","infoType","subType","HapiId","links","colSpan","renderLinks","attachments","sistImportertTilHapi","rel","type","href","strukturId","React","Component","MyPage","mySubmitHandler","event","preventDefault","enviroment","state","setEnviroments","find","o","uglyId","codeSystem","code","setState","fetch","method","headers","response","responseHandler","stringify","myChangeHandler","target","value","ChangeHandlerCode","ChangeHandlerCodeSystem","ChangeHandlerEnviroment","records","className","onSubmit","onChange","evt","autoComplete","placeholder","select","ReactDOM","render","document","getElementById"],"mappings":"6MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCgBCQ,G,MAAc,CACzB,CACEC,GAAI,UACJC,MAAO,UACPC,IAAK,6DACLC,IAAK,oCAEP,CACEH,GAAI,UACJC,MAAO,UACPC,IAAK,6DACLC,IAAK,oCAEP,CACEH,GAAI,KACJC,MAAO,KACPC,IAAK,6DACLC,IAAK,oCAEP,CACEH,GAAI,OACJC,MAAO,aACPC,IAAK,mDACLC,IAAK,sC,cCsJIC,EAjMQ,4JAIrB,WACE,OACE,8BACE,8BAAMC,KAAKC,mBAPI,wBAYrB,WACE,GAAID,KAAKE,MAAMC,KAAM,CACnB,IAAIC,EAAOC,KAAKC,MAAMN,KAAKE,MAAMC,MAEjC,GAAII,MAAMC,QAAQJ,GAChB,OAAOA,EAAKK,KAAI,SAACC,EAAMC,GAAP,OACd,gCAEE,8BAAK,6BAAKD,EAAKE,WACf,qBAAKC,wBAAyB,CAAEC,OAAQJ,EAAKK,SAC7C,eAAC,uBAAD,CAAsBC,KAAMN,EAAKf,GAAjC,UAC0B,MAAvBe,EAAKP,KAAKc,UAAoB,cAAC,kBAAD,UAAiB,6CAAqC,KAErF,cAAC,qBAAD,UACE,qBAAKJ,wBAAyB,CAAEC,OAAQJ,EAAKP,KAAKc,eAGpD,cAAC,kBAAD,UAAiB,4CACjB,cAAC,qBAAD,UAEE,gCAAO,kCAEL,+BACE,oBAAIC,MAAO,CAAEC,WAAY,QAAzB,gBAA0C,6BAAKT,EAAKf,GAAKe,EAAKf,GAAK,QAGrE,+BACE,oBAAIuB,MAAO,CAAEC,WAAY,QAAzB,mBAA6C,6BAAKT,EAAKU,MAAQV,EAAKf,GAAK,QAG3E,+BACE,oBAAIuB,MAAO,CAAEC,WAAY,QAAzB,mBAA6C,6BAAKT,EAAKW,KAAOX,EAAKW,KAAO,QAG5E,+BACE,oBAAIH,MAAO,CAAEC,WAAY,QAAzB,6BAAuD,6BAAKT,EAAKY,eAAiBZ,EAAKY,eAAiB,QAG1G,+BACE,oBAAIJ,MAAO,CAAEC,WAAY,QAAzB,0BAAoD,6BAAKT,EAAKa,aAAeb,EAAKa,aAAe,oBAjCjGZ,MA4CZ,IAAID,EAAON,EAIX,OAHAoB,QAAQC,IAAIlB,MAAMC,QAAQE,IAC1Bc,QAAQC,IAAI,UAGV,gCAGE,8BAAK,6BAAKf,EAAKE,WACf,qBAAKC,wBAAyB,CAAEC,OAAQJ,EAAKK,SAC7C,eAAC,uBAAD,WACwB,MAAvBL,EAAKP,KAAKc,UAAoB,cAAC,kBAAD,UAAiB,6CAAuC,KACvF,cAAC,qBAAD,UAAoB,qBAAKJ,wBAAyB,CAAEC,OAAQJ,EAAKP,KAAKc,eAEpE,cAAC,kBAAD,UAAiB,4CAEjB,eAAC,qBAAD,WACE,gCAAO,kCAEL,+BACE,oBAAIC,MAAO,CAAEC,WAAY,QAAzB,gBAA0C,6BAAKT,EAAKf,GAAKe,EAAKf,GAAK,QAGrE,+BACE,oBAAIuB,MAAO,CAAEC,WAAY,QAAzB,mBAA6C,6BAAKT,EAAKW,KAAOX,EAAKW,KAAO,QAG5E,+BACE,oBAAIH,MAAO,CAAEC,WAAY,QAAzB,6BAAuD,6BAAKT,EAAKY,eAAiBZ,EAAKY,eAAiB,QAG1G,+BACE,oBAAIJ,MAAO,CAAEC,WAAY,QAAzB,mBAA6C,6BAAKT,EAAKU,MAAQV,EAAKU,MAAQ,QAG9E,+BACE,oBAAIF,MAAO,CAAEC,WAAY,QAAzB,uBAAiD,6BAAKT,EAAKgB,SAAWhB,EAAKgB,SAAW,QAGxF,+BACE,oBAAIR,MAAO,CAAEC,WAAY,QAAzB,gCAA0D,6BAAKT,EAAKiB,OAASjB,EAAKiB,MAAM,UAAYjB,EAAKiB,MAAM,UAAU,GAAK,QAGhI,+BACE,oBAAIT,MAAO,CAAEC,WAAY,QAAzB,gCAA0D,6BAAKT,EAAKiB,OAASjB,EAAKiB,MAAM,UAAYjB,EAAKiB,MAAM,UAAU,GAAK,QAGhI,+BACE,oBAAIT,MAAO,CAAEC,WAAY,QAAzB,4BAAsD,6BAAKT,EAAKkB,aAAe,GAAK,YAGtF,+BACE,oBAAIV,MAAO,CAAEC,WAAY,QAAzB,qBAA+C,6BAAMT,EAAKkB,cAAgBlB,EAAKkB,aAAaC,OAAUnB,EAAKkB,aAAaC,OAAS,QAGnI,+BACE,oBAAIX,MAAO,CAAEC,WAAY,QAAzB,uBAAiD,6BAAMT,EAAKkB,cAAgBlB,EAAKkB,aAAaE,SAAYpB,EAAKkB,aAAaE,SAAW,QAGzI,+BACE,oBAAIZ,MAAO,CAAEC,WAAY,QAAzB,qBAA+C,6BAAMT,EAAKkB,cAAgBlB,EAAKkB,aAAaG,QAAWrB,EAAKkB,aAAaG,QAAU,QAGrI,+BACE,oBAAIb,MAAO,CAAEC,WAAY,QAAzB,qBAA+C,6BAAMT,EAAKkB,cAAgBlB,EAAKkB,aAAaI,OAAUtB,EAAKkB,aAAaI,OAAS,QAIjIzB,MAAMC,QAAQE,EAAKuB,OACnB,6BACE,oBAAIC,QAAQ,IAAZ,SAAiBlC,KAAKmC,YAAYzB,EAAKuB,WAEvC,UAKN,gCAAO,kCAEL,+BACE,oBAAIf,MAAO,CAAEC,WAAY,QAAzB,yBAAmD,6BAAKT,EAAK0B,YAAc1B,EAAK0B,YAAc,QAGhG,+BACE,oBAAIlB,MAAO,CAAEC,WAAY,QAAzB,2BAAqD,6BAAKT,EAAKa,aAAeb,EAAKa,aAAe,QAGpG,+BACE,oBAAIL,MAAO,CAAEC,WAAY,QAAzB,iCAA2D,6BAAKT,EAAK2B,qBAAuB3B,EAAK2B,qBAAuB,sBAU1I,MAAO,KAhKc,yBAoKrB,SAAYJ,GACV,GAAa,MAATA,EACJ,OAAOA,EAAMxB,KAAI,SAACC,EAAMC,GAAP,OACf,8BAEE,gCAAO,kCAEL,+BACE,oBAAIO,MAAO,CAAEC,WAAY,QAAzB,iBAA2C,6BAAKT,EAAK4B,IAAM5B,EAAK4B,IAAM,QAGxE,+BACE,oBAAIpB,MAAO,CAAEC,WAAY,QAAzB,kBAA4C,6BAAKT,EAAK6B,KAAO7B,EAAK6B,KAAO,QAG3E,+BACE,sCAAa,6BAAK7B,EAAK8B,KAAO9B,EAAK8B,KAAO,QAG5C,+BACE,6CAAoB,6BAAK9B,EAAK+B,WAAa/B,EAAK+B,WAAa,cAjBzD9B,UAvKO,GAA4B+B,IAAMC,WCMnDC,G,wDAEJ,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAgBR2C,gBAAkB,SAACC,GACjBA,EAAMC,iBAGN,IAAMC,EAAa,EAAKC,MAAMD,WAC1BE,EAAiBxD,EAAYyD,MAAK,SAAAC,GAAC,OAAIA,EAAEzD,KAAOqD,KAEhDnD,EAAMqD,EAAerD,IACrBC,EAAMoD,EAAepD,IACrB,EAAKmD,MAAMI,OACbxD,GAAO,IAAM,EAAKoD,MAAMI,OAExBxD,GAAO,aAAe,EAAKoD,MAAMK,WAAa,SAAW,EAAKL,MAAMM,KAItE,EAAKC,SAAS,CAAE3D,IAAKA,IAErB4D,MAAM5D,EACJ,CACE6D,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,4BAA6B7D,KAIhCV,MAAK,SAAAwE,GAAQ,OAAIA,EAASxD,UAC1BhB,MAAK,SAAAe,GAAI,OAAI,EAAK0D,gBAAgB1D,OA7CpB,EAgDnB0D,gBAAkB,SAAC1D,GACbA,GACF,EAAKqD,SAAS,CACZI,SAAUvD,KAAKyD,UAAU3D,EAAM,KAAM,MAnDxB,EAwDnB4D,gBAAkB,SAACjB,GACjB,EAAKU,SAAS,CACZH,OAAQP,EAAMkB,OAAOC,SA1DN,EA6DnBC,kBAAoB,SAACpB,GACnB,EAAKU,SAAS,CACZD,KAAMT,EAAMkB,OAAOC,SA/DJ,EAkEnBE,wBAA0B,SAACrB,GACzB,EAAKU,SAAS,CACZF,WAAYR,EAAMkB,OAAOC,SApEV,EAuEnBG,wBAA0B,SAACtB,GACzB,EAAKU,SAAS,CACZR,WAAYF,EAAMkB,OAAOC,SAtE3B,EAAKhB,MAAQ,CACXI,OAAQ,GACRC,WAAY,GACZC,KAAM,GACN1D,IAAK,GACL+D,SAAU,GACVS,QAAS,GACTrB,WAAY,QAVG,E,0CA+EnB,WAAU,IAAD,OACP,OACE,gCACE,sBAAKsB,UAAU,wBAAf,UACE,6CACA,sEAGF,uBAAMC,SAAUvE,KAAK6C,gBAArB,UAEI,qBAAKyB,UAAU,aAAf,SACE,yBAAQtD,KAAK,aAAarB,GAAG,aAC3B6E,SAAU,SAAAC,GAAG,OAAI,EAAKL,wBAAwBK,IADhD,UAIE,wBAAQR,MAAM,OAAd,wBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,KAAd,qBAKJ,qBAAKK,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,6FAIJ,qBAAKA,UAAU,aAAf,SACE,uBACE3E,GAAG,KACH4C,KAAK,OACLmC,aAAa,KACbC,YAAY,UACZV,MAAOjE,KAAKiD,MAAMI,OAClBmB,SAAU,SAAAC,GAAG,OAAI,EAAKV,gBAAgBU,QAI1C,qBAAKH,UAAU,aAAf,SACI,sBAAMA,UAAU,cAAhB,kBAGJ,qBAAKA,UAAU,aAAf,SACE,yBAAQtD,KAAK,aAAarB,GAAG,aAC3B6E,SAAU,SAAAC,GAAG,OAAI,EAAKN,wBAAwBM,IADhD,UAGE,wBAAQR,MAAM,GAAGW,OAAO,UAAxB,gCACA,wBAAQX,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,4BAIJ,qBAAKK,UAAU,aAAf,SACE,uBACE/B,KAAK,OACLmC,aAAa,KACb/E,GAAG,OACHgF,YAAY,OACZV,MAAOjE,KAAKiD,MAAMM,KAClBiB,SAAU,SAAAC,GAAG,OAAI,EAAKP,kBAAkBO,QAI5C,qBAAKH,UAAU,aAAf,SACE,uBACE/B,KAAK,SACL0B,MAAM,wCAMd,8BACE,cAAC,EAAD,CAAY9D,KAAMH,KAAKiD,MAAMW,aAG/B,8BAAK,8BAAM5D,KAAKiD,MAAMW,aACtB,8BAAK,8BAAK,6BAAK5D,KAAKiD,MAAMpD,iB,GAlKb6C,IAAMC,YA0K3BkC,IAASC,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,SAEpD/F,M","file":"static/js/main.0ca8efd5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const codeSystems = [\n    {\n      id: \"ICPC-2\",\n      title: \"ICPC-2\",\n    },\n    {\n      id: \"ICD-10\",\n      title: \"ICD-10\",\n    },\n    \n    {\n      id: \"ATC\",\n      title: \"ATC\",\n    },\n\n    {\n      id: \"SNOMED-CT\",\n      title: \"SNOMED-CT\",\n    },\n  ]\n\n \n  \n  export const enviroments = [\n    {\n      id: \"test-bt\",\n      title: \"Test BT\",\n      url: \"https://helsedirektoratet-bt.azure-api.net/innhold/innhold\",\n      key: \"143e448642124111b8c5e4d7e00d1975\",\n    },\n    {\n      id: \"test-st\",\n      title: \"Test ST\",\n      url: \"https://helsedirektoratet-st.azure-api.net/innhold/innhold\",\n      key: \"663f23169cae4c8785ec48defa793c23\",\n    },\n    {\n      id: \"qa\",\n      title: \"QA\",\n      url: \"https://helsedirektoratet-at.azure-api.net/innhold/innhold\",\n      key: \"4f044f75aeea46529ad158cf910e800c\",\n    },\n    {\n      id: \"prod\",\n      title: \"Production\",\n      url: \"https://api.helsedirektoratet.no/innhold/innhold\",\n      key: \"89b72a3ad5cf4723b3f489c3eb4d82a1\",\n    },\n  ]\n\n","import React from 'react';\nimport { CollapsibleComponent, CollapsibleHead, CollapsibleContent } from \"react-collapsible-component\";\n\nexport const HTMLRender = class HTMLRender extends React.Component {\n\n\n\n  render () {\n    return (\n      <div>\n        <div>{this.renderJson()}</div>\n      </div>\n    );\n  }\n\n  renderJson() {\n    if (this.props.data) {\n      let json = JSON.parse(this.props.data);\n\n      if (Array.isArray(json)) {\n        return json.map((item, index) =>\n          <div key={index}>\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent name={item.id}> \n              {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead>:null} \n\n              <CollapsibleContent>\n                <div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div>\n              </CollapsibleContent>\n\n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n              <CollapsibleContent>\n\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>DokumentType</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                </tbody></table>\n\n              </CollapsibleContent>\n            </CollapsibleComponent>\n\n          </div>);\n      } else {\n        //if object (checking)\n        let item = json;\n        console.log(Array.isArray(item));\n        console.log('object');\n\n        return (\n          <div>\n\n\n            <div><h1>{item.tittel}</h1></div>\n            <div dangerouslySetInnerHTML={{ __html: item.tekst }}></div>\n            <CollapsibleComponent>\n            {item.data.rasjonale != null ? <CollapsibleHead><h2>Rasjonale</h2></CollapsibleHead> : null} \n            <CollapsibleContent><div dangerouslySetInnerHTML={{ __html: item.data.rasjonale }}></div></CollapsibleContent>\n              \n              <CollapsibleHead><h2>Metadata</h2></CollapsibleHead>\n\n              <CollapsibleContent>\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Id</td><td>{item.id ? item.id : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Owner</td><td>{item.eier ? item.eier : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>FirstPublicated</td><td>{item.forstPublisert ? item.forstPublisert : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>intro</td><td>{item.intro ? item.intro : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>grouppeID</td><td>{item.gruppeId ? item.gruppeId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system ICPC-2</td><td>{item.koder && item.koder['ICPC-2'] ? item.koder['ICPC-2'][0] : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Code system ICD-10</td><td>{item.koder && item.koder['ICD-10'] ? item.koder['ICD-10'][0] : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Technical data</td><td>{item.tekniskeData ? '' : 'none'}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info Id</td><td>{(item.tekniskeData && item.tekniskeData.infoId) ? item.tekniskeData.infoId : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Info type</td><td>{(item.tekniskeData && item.tekniskeData.infoType) ? item.tekniskeData.infoType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Subtype</td><td>{(item.tekniskeData && item.tekniskeData.subType) ? item.tekniskeData.subType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>HAPI id</td><td>{(item.tekniskeData && item.tekniskeData.HapiId) ? item.tekniskeData.HapiId : ''}</td>\n                  </tr>\n                  \n                  {\n                    Array.isArray(item.links) ? \n                    <tr>\n                      <td colSpan=\"2\">{this.renderLinks(item.links)}</td>\n                    </tr>\n                    : null\n                  }\n\n                </tbody></table>\n\n                <table><tbody>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Attachments</td><td>{item.attachments ? item.attachments : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Document type</td><td>{item.dokumentType ? item.dokumentType : ''}</td>\n                  </tr>\n\n                  <tr>\n                    <td style={{ fontWeight: \"bold\" }}>Last import to HAPI</td><td>{item.sistImportertTilHapi ? item.sistImportertTilHapi : ''}</td>\n                  </tr>\n\n                </tbody></table>\n              </CollapsibleContent>\n            </CollapsibleComponent>\n\n          </div>);\n      }\n    }\n  return '';\n  }\n\n\n  renderLinks(links) {\n    if (links != null)\n    return links.map((item, index) =>\n      <div key={index}>\n\n        <table><tbody>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Rel</td><td>{item.rel ? item.rel : ''}</td>\n          </tr>\n\n          <tr>\n            <td style={{ fontWeight: \"bold\" }}>Type</td><td>{item.type ? item.type : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Href</td><td>{item.href ? item.href : ''}</td>\n          </tr>\n\n          <tr>\n            <td>Struktur Id</td><td>{item.strukturId ? item.strukturId : ''}</td>\n          </tr>\n\n        </tbody></table>\n\n      </div>);\n  }\n\n}\nexport default HTMLRender;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { enviroments } from './config.ts';\nimport HTMLRender from './components/htmlRenderComponent.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass MyPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      uglyId: '',\n      codeSystem: '',\n      code: '',\n      url: '',\n      response: '',\n      records: [],\n      enviroment: 'prod',\n\n    };\n\n  }\n\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n\n    //const urlAddress = 'https://api.helsedirektoratet.no/innhold/innhold';\n    const enviroment = this.state.enviroment;\n    let setEnviroments = enviroments.find(o => o.id === enviroment);\n\n    let url = setEnviroments.url;\n    let key = setEnviroments.key\n    if (this.state.uglyId) {\n      url += '/' + this.state.uglyId;\n    } else {\n      url += '?kodeverk=' + this.state.codeSystem + \"&kode=\" + this.state.code;\n    }\n\n\n    this.setState({ url: url });\n\n    fetch(url,\n      {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Ocp-Apim-Subscription-Key': key\n        }\n      }\n    )\n      .then(response => response.json())\n      .then(data => this.responseHandler(data));\n  }\n\n  responseHandler = (data) => {\n    if (data) {\n      this.setState({\n        response: JSON.stringify(data, null, 2)\n      });\n    }\n  }\n\n  myChangeHandler = (event) => {\n    this.setState({\n      uglyId: event.target.value\n    });\n  }\n  ChangeHandlerCode = (event) => {\n    this.setState({\n      code: event.target.value\n    });\n  }\n  ChangeHandlerCodeSystem = (event) => {\n    this.setState({\n      codeSystem: event.target.value\n    });\n  }\n  ChangeHandlerEnviroment = (event) => {\n    this.setState({\n      enviroment: event.target.value\n\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron text-center\">\n          <h1>Search HAPI</h1>\n          <p>Get content from Helsedirektoratet</p> \n        </div>\n\n        <form onSubmit={this.mySubmitHandler}>\n\n            <div className=\"form-group\">\n              <select name=\"enviroment\" id=\"enviroment\"\n                onChange={evt => this.ChangeHandlerEnviroment(evt)}\n              >\n\n                <option value=\"prod\">Production</option>\n                <option value=\"test-bt\">Test BT</option>\n                <option value=\"test-st\">Test ST</option>\n                <option value=\"qa\">QA</option>\n\n              </select>  \n            </div>\n\n            <div className=\"row\">\n              <div className=\"col\">\n                <p>Please provide either HAPI-id or code from a code system</p>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                id=\"id\"\n                type='text'\n                autoComplete=\"on\"\n                placeholder=\"HAPI-id\"\n                value={this.state.uglyId}\n                onChange={evt => this.myChangeHandler(evt)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n                <span className=\"marginRight\">or</span>\n            </div>\n\n            <div className=\"form-group\">\n              <select name=\"codeSystem\" id=\"codeSystem\"\n                onChange={evt => this.ChangeHandlerCodeSystem(evt)}\n              >\n                <option value=\"\" select=\"default\">Choose code system</option>\n                <option value=\"ICD-10\">ICD-10</option>\n                <option value=\"ICPC-2\">ICPC-2</option>\n                <option value=\"ATC\">ATC</option>\n                <option value=\"SNOMED-CT\">SNOMED-CT</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type='text'\n                autoComplete=\"on\"\n                id=\"code\"\n                placeholder=\"Code\"\n                value={this.state.code}\n                onChange={evt => this.ChangeHandlerCode(evt)}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type='submit'\n                value=\"поиск\"\n              />\n            </div>\n                  \n        </form>\n\n        <div>\n          <HTMLRender data={this.state.response}/>\n        </div>\n\n        <div><pre>{this.state.response}</pre></div>\n        <div><pre><h4>{this.state.url}</h4></pre></div>\n        \n      </div>\n    );\n  }\n\n}\n\nReactDOM.render(<MyPage />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}